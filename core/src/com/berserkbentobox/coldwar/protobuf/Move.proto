syntax = "proto2";

package com.berserkbentobox.coldwar;

import "Province.proto";
import "google/protobuf/descriptor.proto";

extend google.protobuf.MessageOptions {
  optional int32 pol_cost = 76000;
  optional int32 mil_cost = 76001;
  optional int32 cov_cost = 76002;
}

message MoveList {
	repeated Move moves = 1;
}

//Proto variable names need to be VERBATIM same as message type
message Move {
	// Direct influence actions
	optional DiplomacyMove dia_dip_move = 1;
	optional MilitaryMove dia_mil_move = 2;
	optional CovertMove dia_cov_move = 3;

	optional FundDissidentsMove fund_dissidents_move = 101;
	optional EstablishBaseMove establish_base_move = 102;
	optional PoliticalPressureMove political_pressure_move = 103;
	optional CoupMove coup_move = 104;

	optional ConflictOvertFundAttackerMove conflict_overt_fund_attacker_move = 110;
	optional ConflictOvertFundDefenderMove conflict_overt_fund_defender_move = 111;

	optional FoundCIAMove found_cia_move = 200;

	optional FoundKGBMove found_kgb_move = 300;

	optional FoundNATOMove found_nato_move = 1001;
	optional FoundPactMove found_pact_move = 1002;

	//Crises

	optional USSRBerlinBlockadeLiftBlockadeMove ussr_berlin_blockade_lift_blockade_move = 2001;
	optional USABerlinBlockadeAirliftMove usa_berlin_blockade_airlift_move = 2002;
}

// ========== DIRECT INFLUENCE ACTIONS ==========

// Influence by spending DIP points
message DiplomacyMove {
	optional Province.Id province_id = 1;
	optional int32 magnitude = 2;

	option (pol_cost) = 1;
}

// Influence by spending MIL points
message MilitaryMove {
	optional Province.Id province_id = 1;
	optional int32 magnitude = 2;

	option (mil_cost) = 1;
}

// Influence by spending COV points
message CovertMove {
	optional Province.Id province_id = 1;
	optional int32 magnitude = 2;

	option (cov_cost) = 1;
}

// ========== TARGETED ACTIONS ==========

message FundDissidentsMove {
	optional Province.Id province_id = 1;

	option (cov_cost) = 1;
}

message EstablishBaseMove {
	optional Province.Id province_id = 1;

	option (mil_cost) = 2;
}

message PoliticalPressureMove {
	optional Province.Id province_id = 1;

	option (pol_cost) = 2;
}

message CoupMove {
	optional Province.Id province_id = 1;
	optional int32 magnitude = 2;
}

// ========= CONFLICT ACTIONS ==========

message ConflictOvertFundAttackerMove {
	optional Province.Id province_id = 1;
}

message ConflictOvertFundDefenderMove {
	optional Province.Id province_id = 1;
}

// ========== SPECIAL ACTIONS ==========

message FoundNATOMove {
}

message FoundPactMove {
}

message FoundCIAMove {
}

message FoundKGBMove {
}

// =========== CRISES ==================

message USSRBerlinBlockadeLiftBlockadeMove {
}

message USABerlinBlockadeAirliftMove {
}