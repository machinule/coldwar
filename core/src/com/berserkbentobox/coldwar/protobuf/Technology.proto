syntax = "proto2";

package com.berserkbentobox.coldwar;

import "Province.proto";

// ========== Ids ==========

enum TechnologyGroupId {
	NUCLEAR = 1;
	SPACE = 2;
	ARMY = 3;
	SURFACE_NAVY = 4;
	AIR = 5;
	SUBMARINES = 6;
}

enum TechnologyId {
	ATOM_BOMB = 1;
	HYDROGEN_BOMB = 2;

	BASIC_ROCKETRY = 101;
	ARTIFICIAL_SATELLITES = 102;
	ANIMAL_IN_SPACE = 103;
	MANNED_SPACEFLIGHT = 104;

	VETERAN_ARMY = 201;

	BASIC_SUBMARINES = 202;
}

// ========== Settings ==========

// The top-level settings proto included in GameSettings.
// Immutable over the duration of a single game.
message TechnologyGameSettings {
	repeated TechnologyGroupSettings technology_group = 1;
	repeated TechnologyGroupState init_usa_technology_group = 2;
	repeated TechnologyGroupState init_ussr_technology_group = 3;
}

// Settings for a single technology group.
message TechnologyGroupSettings {
	optional TechnologyGroupId id = 1;
	optional string label = 2;
	repeated TechnologySettings technology = 3;
    optional int32 base_research_chance = 4;
    optional int32 research_effect = 5; //Increase to probability when player spents points on research
    // Mag = 1 >> +10% research for that tech group if research effect = 100000
}

// Settings for a single technology.
message TechnologySettings {
	optional int32 num_progressions = 1;
	optional TechnologyId id = 2;
	optional string label = 3;
	repeated TechnologyId requires = 4;
	repeated TechnologyId unlocks = 5;
	optional int32 deterrence = 6 [default = 0]; //Military techs only
	optional int32 base_vp = 7 [default = 0]; //Space only
	optional int32 first_vp = 8 [default = 0]; //Space only
}

// ========== State ==========

// The top-level state proto included in GameState.
// Mutated each turn based on moves.

message TechnologyGameState {
	repeated TechnologyGroupState usa_state = 1;
	repeated TechnologyGroupState ussr_state = 2;
}

message TechnologyGroupState {
	optional TechnologyGroupId id = 1;
	repeated TechnologyState technology = 2;
}

message TechnologyState {
	optional TechnologyId id = 1;
	optional int32 progress = 2 [default = 0];
}
